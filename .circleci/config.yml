version: 2.1

commands:
  check_for_git_changes:
    steps:
      - run:
          name: Check for git changes
          command: |
            if [[ $(git status --porcelain) != '' ]]
            then
              git status
              exit 1
            fi

  terraform_plan:
    steps:
      - checkout:
          path: ~/project

      - run:
          command: terraform init

      - run:
          command: terraform fmt -check=true

      - run:
          command: terraform plan -lock=false

      - check_for_git_changes

  terraform_deploy:
    steps:
      - checkout:
          path: ~/project

      - run:
          command: terraform init

      - run:
          command: terraform apply -auto-approve

      - check_for_git_changes

executors:
  rails:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
      - image: circleci/postgres:10-alpine-ram

  terraform:
    docker:
      - image: hashicorp/terraform:0.11.14

    environment:
      TF_IN_AUTOMATION: 'true'
      TF_INPUT: 'false'

jobs:
  test_ruby:
    executor: rails

    steps:
      - checkout

      - restore_cache:
          name: Restoring bundle cache
          keys:
            - bundle-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}
            - bundle-{{ checksum ".ruby-version" }}-

      - restore_cache:
          name: Restoring node cache
          keys:
            - node-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
            - node-{{ checksum "package.json" }}-

      - run:
          command: ./bin/setup

      - save_cache:
          name: Saving bundle cache
          key: bundle-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - save_cache:
          name: Saving node cache
          key: node-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      - restore_cache:
          name: Restoring webpacker cache
          keys:
            - webpacker-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}

      - run:
          command: ./bin/compile
          environment:
            RAILS_ENV: test

      - save_cache:
          name: Saving webpacker cache
          key: webpacker-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
          paths:
            - public/packs-test
            - tmp/cache/webpacker

      - run:
          command: ./bin/test

      - run:
          command: ./bin/quality

      - check_for_git_changes

      - store_test_results:
          path: tmp/test_results

      - store_artifacts:
          path: coverage
          destination: coverage

  plan_staging:
    executor: terraform
    working_directory: ~/project/terraform/app_environment
    steps:
      - terraform_plan

  plan_production:
    executor: terraform
    working_directory: ~/project/terraform/app_environment
    steps:
      - terraform_plan

  plan_global:
    executor: terraform
    working_directory: ~/project/terraform/app_global
    steps:
      - terraform_plan

  deploy_staging:
    executor: terraform
    working_directory: ~/project/terraform/app_environment
    steps:
      - terraform_deploy

  deploy_production:
    executor: terraform
    working_directory: ~/project/terraform/app_environment
    steps:
      - terraform_deploy

  deploy_global:
    executor: terraform
    working_directory: ~/project/terraform/app_global
    steps:
      - terraform_deploy

only_master: &only_master
  filters:
    branches:
      only:
        - master

workflows:
  version: 2
  commit:
    jobs:
      - test_ruby

      - plan_staging:
          context: cms_terraform_staging

      - plan_production:
          context: cms_terraform_production

      - plan_global:
          context: cms_terraform_global

      - deploy_staging:
          <<: *only_master
          context: cms_terraform_staging
          requires:
            - test_ruby
            - plan_staging
            - plan_production
            - plan_global

      - deploy_production:
          <<: *only_master
          context: cms_terraform_production
          requires:
            - deploy_staging

      - deploy_global:
          <<: *only_master
          context: cms_terraform_global
          requires:
            - deploy_production
