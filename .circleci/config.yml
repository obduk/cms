version: 2

check_for_git_changes: &check_for_git_changes
  run:
    name: Check for git changes
    command: |
      if [[ $(git status --porcelain) != '' ]]
      then
        git status
        exit 1
      fi

terraform_defaults: &terraform_defaults
  docker:
    - image: hashicorp/terraform:light

  environment:
    TF_IN_AUTOMATION: "true"
    TF_INPUT: "false"

terraform_checkout: &terraform_checkout
  checkout:
    path: ~/project

terraform_init: &terraform_init
  run:
    command: terraform init

terraform_plan: &terraform_plan
  steps:
    - *terraform_checkout
    - *terraform_init
    - run:
        command: terraform fmt -check=true
    - run:
        command: terraform plan -lock=false
    - *check_for_git_changes

terraform_deploy: &terraform_deploy
  steps:
    - *terraform_checkout
    - *terraform_init
    - run:
        command: terraform apply -auto-approve
    - *check_for_git_changes

jobs:
  test_ruby:
    docker:
      - image: circleci/ruby:2.6.1-node-browsers
      - image: circleci/postgres:10-alpine-ram

    steps:
      - checkout

      - restore_cache:
          keys:
            - bundle-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}
            - bundle-{{ checksum ".ruby-version" }}-

      - restore_cache:
          keys:
            - yarn-{{ checksum "yarn.lock" }}
            - yarn-

      - run:
          command: ./bin/setup

      - save_cache:
          key: bundle-{{ checksum ".ruby-version" }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - save_cache:
          key: yarn-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      - restore_cache:
          keys:
            - webpacker-{{ .Environment.CIRCLE_PREVIOUS_BUILD_NUM }}
            - webpacker-

      - run:
          command: ./bin/compile
          environment:
            RAILS_ENV: test

      - save_cache:
          key: webpacker-{{ .Environment.CIRCLE_BUILD_NUM }}
          paths:
            - public/packs-test
            - tmp/cache/webpacker

      - run:
          command: ./bin/test

      - run:
          command: ./bin/quality

      - *check_for_git_changes

      - store_test_results:
          path: tmp/test_results

      - store_artifacts:
          path: coverage
          destination: coverage

  plan_staging:
    <<: *terraform_defaults
    <<: *terraform_plan
    working_directory: ~/project/terraform/app_environment

  plan_production:
    <<: *terraform_defaults
    <<: *terraform_plan
    working_directory: ~/project/terraform/app_environment

  plan_global:
    <<: *terraform_defaults
    <<: *terraform_plan
    working_directory: ~/project/terraform/app_global

  deploy_staging:
    <<: *terraform_defaults
    <<: *terraform_deploy
    working_directory: ~/project/terraform/app_environment

  deploy_production:
    <<: *terraform_defaults
    <<: *terraform_deploy
    working_directory: ~/project/terraform/app_environment

  deploy_global:
    <<: *terraform_defaults
    <<: *terraform_deploy
    working_directory: ~/project/terraform/app_global

only_master: &only_master
  filters:
    branches:
      only:
        - master

workflows:
  version: 2
  commit:
    jobs:
      - test_ruby

      - plan_staging:
          context: cms_terraform_staging

      - plan_production:
          context: cms_terraform_production

      - plan_global:
          context: cms_terraform_global

      - deploy_staging:
          <<: *only_master
          context: cms_terraform_staging
          requires:
            - test_ruby
            - plan_staging
            - plan_production
            - plan_global

      - deploy_production:
          <<: *only_master
          context: cms_terraform_production
          requires:
            - deploy_staging

      - deploy_global:
          <<: *only_master
          context: cms_terraform_global
          requires:
            - deploy_production
